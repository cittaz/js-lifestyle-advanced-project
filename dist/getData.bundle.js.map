{"version":3,"file":"getData.bundle.js","mappings":"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","sources":["webpack://advancedproject/./node_modules/@kurkle/color/dist/color.esm.js","webpack://advancedproject/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://advancedproject/./node_modules/chart.js/dist/chart.js","webpack://advancedproject/./node_modules/chart.js/auto/auto.js","webpack://advancedproject/./src/js/getData.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.1.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.1.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.1.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { options: { elements  } , data: { datasets  }  } = chart.config;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import Chart from 'chart.js/auto';\nChart.defaults.color = \"#fff\";\nChart.defaults.font.size = 16;\n\nfunction formatInput() {\n  let inputForm = document.getElementById('inputForm');\n  let lowerCaseValue = inputForm.value.toLowerCase();\n  if(lowerCaseValue.includes(' ')) {\n    let finalValue = lowerCaseValue.replace(' ', '-');\n    return new URL(`https://api.teleport.org/api/urban_areas/slug:${finalValue}/scores/`);\n  }\n  else {\n    return new URL(`https://api.teleport.org/api/urban_areas/slug:${lowerCaseValue}/scores/`)\n  }\n}\n\nfunction createChart(apiResponse) {\n  let canvasContainer = document.querySelector('.chart');\n  canvasContainer.innerHTML = '<canvas id=\"myChart\"></canvas>';\n  let xValues = [];\n  let yValues = [];\n  let barColors = [];\n\n  for(let i = 0; i<17; i++) {\n    let categoryName = apiResponse.categories[i].name;\n    let categoryScore = apiResponse.categories[i].score_out_of_10.toFixed(1);\n    let categoryColor = apiResponse.categories[i].color;\n    xValues.push(categoryName);\n    yValues.push(categoryScore);\n    barColors.push(categoryColor);\n  }\n\n  new Chart(\"myChart\", {\n    type: \"bar\",\n    data: {\n      labels: xValues,\n      datasets: [{\n        label: 'Score out of 10',\n        backgroundColor: barColors,\n        data: yValues\n      }]\n    },\n    options: {\n      indexAxis: 'y',\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          enabled: true\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }\n  });\n}\n\nfunction appendResponse(apiResponse) {\n    let summary = apiResponse.summary;\n    let section = document.querySelector('.responseSection');\n\n    createChart(apiResponse);\n\n    injectedAbout.innerHTML = summary;\n    section.style.display = 'flex';\n}\n\nasync function getData() {\n  let errorSection = document.getElementById('errorSection');\n  if(errorSection) {\n    errorSection.remove();\n}\ntry {\n    let newUrl = formatInput();\n    let request = await fetch(newUrl);\n    let response = await request.json();\n    if(!request.ok) {\n      throw new Error('error getting data');\n    }\n    appendResponse(response);\n  } catch(error) {\n    console.log(error.message)\n    let section = document.querySelector('.responseSection');\n    section.style.display = 'none';\n    let errorSection = document.createElement('h3');\n    errorSection.id = 'errorSection';\n    errorSection.innerHTML = 'City not found.<br>Please write the name in English.';\n    errorSection.style.textAlign = 'center';\n    errorSection.style.color = 'white';\n    errorSection.style.fontSize = '24px';\n    errorSection.style.marginTop = '50px';\n    \n    document.querySelector('body').append(errorSection);\n    }\n}\n\nsubmitBtn.addEventListener('click', () => {\n  getData();\n  inputForm.value =  '';\n});\n\ninputForm.addEventListener('keydown', (event) => {\n  if(event.keyCode === 13) {\n    event.preventDefault();\n    getData();\n    inputForm.value =  '';\n  };\n}); \n  \n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","height1","width1","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","appendResponse","apiResponse","summary","section","querySelector","innerHTML","xValues","yValues","barColors","categoryName","categories","categoryScore","score_out_of_10","toFixed","categoryColor","createChart","injectedAbout","async","getData","errorSection","newUrl","lowerCaseValue","finalValue","URL","formatInput","request","fetch","response","json","log","message","createElement","marginTop","append","submitBtn","inputForm","keyCode","preventDefault"],"sourceRoot":""}